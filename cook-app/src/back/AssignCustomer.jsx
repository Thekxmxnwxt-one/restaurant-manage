import React, { useEffect, useState } from "react";
import axios from "axios";
import "../styles/AssignCustomer.css";

const AssignCustomer = () => {
  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [tableId, setTableId] = useState("");
  const [tables, setTables] = useState([]);
  const [activeCustomers, setActiveCustomers] = useState([]);
  const [message, setMessage] = useState("");

  useEffect(() => {
    fetchTables();
    fetchCustomers();
  }, []);

  const fetchTables = async () => {
    const res = await axios.get("http://localhost:8080/api/tables");
    const available = res.data.data.filter((t) => t.status === "available");
    setTables(available);
  };

  const fetchCustomers = async () => {
    const res = await axios.get("http://localhost:8080/api/customers");
    const active = res.data.data.filter((c) => c.status === "seated");
    setActiveCustomers(active);
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const customerRes = await axios.post("http://localhost:8080/api/customers", {
        name,
        phone,
        tableId: parseInt(tableId),
        status: "seated",
      });


      await axios.put("http://localhost:8080/api/tables/status", {
        id: parseInt(tableId),
        status: "not available",
      });

      setMessage("‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");
      setName("");
      setPhone("");
      setTableId("");
      fetchTables();
      fetchCustomers();
    } catch (err) {
      setMessage("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    }
  };

  return (
    <div className="assign-container">
      <div className="column form-column">
        <h2>‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏à‡∏≠‡∏á‡πÇ‡∏ï‡πä‡∏∞</h2>
        <form onSubmit={handleSubmit} className="form-section">
          <label>‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤</label>
          <input value={name} onChange={(e) => setName(e.target.value)} required />

          <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
          <input value={phone} onChange={(e) => setPhone(e.target.value)} required />

          <label>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞‡∏ó‡∏µ‡πà‡∏ß‡πà‡∏≤‡∏á</label>
          <select value={tableId} onChange={(e) => setTableId(e.target.value)} required>
            <option value="">-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÇ‡∏ï‡πä‡∏∞ --</option>
            {tables.map((t) => (
              <option key={t.id} value={t.id}>
                ‡πÇ‡∏ï‡πä‡∏∞ {t.tableNumber}
              </option>
            ))}
          </select>

          <button type="submit">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
          {message && <p className="message">{message}</p>}
        </form>
      </div>

      <div className="column list-column">
        <h2>‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ô‡∏±‡πà‡∏á‡πÇ‡∏ï‡πä‡∏∞</h2>
        <ul className="customer-list">
          {activeCustomers.length === 0 ? (
            <li>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÇ‡∏ï‡πä‡∏∞</li>
          ) : (
            activeCustomers.map((c) => (
              <li key={c.id}>
                üë§ {c.name} ({c.phone}) - ‡πÇ‡∏ï‡πä‡∏∞ {c.table?.tableNumber || "-"}
              </li>
            ))
          )}
        </ul>
      </div>
    </div>
  );
};

export default AssignCustomer;